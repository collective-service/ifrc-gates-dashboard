version: '3.3'

services:
  react:
    build: .
    command: sh -c 'yarn install && yarn start'
    build:
      context: ./
      target: base
    tty: true
    environment:
      NODE_OPTIONS: --openssl-legacy-provider
      GRAPHQL_CODEGEN_ENDPOINT: ${GRAPHQL_CODEGEN_ENDPOINT:-http://localhost:7000/graphql/}
      REACT_APP_GRAPHQL_ENDPOINT: ${REACT_APP_GRAPHQL_ENDPOINT:-http://localhost:7000/graphql/}
    env_file:
      - .env
    volumes:
      - .:/code
    ports:
      - '3050:3050'

  redis:
    image: redis:latest
    volumes:
      - redis-data:/data

  db:
    image: postgres:14
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_PORT=5432
    volumes:
      - postgres-data:/var/lib/postgresql/data

  server:
    restart: always
    image: ifrc-gates-server/server
    build:
      context: ./server/
    tty: true
    environment:
      DEBUG: ${DEBUG:-True}
      SECRET_KEY: ${SECRET_KEY:-django-insecure-xxxxxxxx-do-not-use-in-production}
      CELERY_REDIS_URL: ${CELERY_REDIS_URL:-redis://redis:6379/0}
      DJANGO_CACHE_REDIS_URL: ${DJANGO_CACHE_REDIS_URL:-redis://redis:6379/1}
      DB_NAME: ${DB_NAME:-postgres}
      DB_USER: ${DB_USER:-postgres}
      DB_PWD: ${DB_PWD:-postgres}
      DB_HOST: db
      DB_PORT: 5432
      VISUALIZATION_DB_HOST: ${VISUALIZATION_DB_HOST:-postgres}
      VISUALIZATION_DB_PORT: ${VISUALIZATION_DB_PORT:-postgres}
      DJANGO_DB_HOST: ${DJANGO_DB_HOST:-postgres}
      DJANGO_DB_PORT: ${DJANGO_DB_PORT:-postgres}
    env_file:
      - .env
    command: bash -c "/code/scripts/run_develop.sh"
    volumes:
      - ./server/:/code
      - media:/media
    ports:
      - '7020:7020'
    depends_on:
      - redis
      - db

volumes:
  media:
  postgres-data:
  redis-data:
